/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DisplayDefault.java
 *
 * Created on Dec 13, 2011, 10:44:39 PM
 */
package com.opus;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontMetrics;
import java.text.DecimalFormat;
import java.util.Calendar;


/**
 *
 * @author antrax
 */
public class DisplayDefault extends javax.swing.JPanel implements MDisplay{

    String header;
    String format;
    String unit;
    Font display_font;
   
    
    /** Creates new form DisplayDefault */
    public DisplayDefault() {
        
        initComponents();
    }

    
    public DisplayDefault(String header, String format, String unit, Font display_font) {
        
        this.header=header;
        this.format=format;
        this.unit=unit;
        this.display_font=display_font;
        initComponents(); 
    }
    
    
    
    @Override
    public void commitDisplay(){
        
        FontMetrics metrics;
        Dimension v_size, u_size, out_size, pn_size;
        int hgt, adv;
        
        // Ajuste o widget do valor
        // Configure a fonte utilizada
        VarValue.setFont(display_font);       
        // Calcule o tamanho do widget para o valor a mostrar
        metrics = VarValue.getFontMetrics(display_font);
        hgt = metrics.getHeight()+2;
        adv = metrics.stringWidth(format)+20;
        v_size = new Dimension(adv, hgt);
        VarValue.setPreferredSize(v_size);
        
        
        // Agora o widget de Unidades
        if (display_font.getSize() > 12){
            VarType.setFont(display_font.deriveFont((float) display_font.getSize()-2));
        }
        
        metrics = VarValue.getFontMetrics(VarType.getFont());
        adv = metrics.stringWidth(unit+" ")+2;
        u_size = new Dimension(adv, hgt);
        VarType.setPreferredSize(u_size);
        
        out_size = new Dimension(v_size.width+u_size.width, hgt);
        out_panel.setPreferredSize(out_size);
        
        // Ajuste o header
        v_size = new Dimension(out_size.width, hgt/2);
        Header.setPreferredSize(v_size);
        
        pn_size = new Dimension(out_size.width, out_size.height + v_size.height);
        this.setPreferredSize(pn_size);
        
        setValue(0);
        
    }
    
    
    @Override
    public void setValue(double value){    
       DecimalFormat myFormatter = new DecimalFormat(format);
       String output = myFormatter.format(value);
       VarValue.setText(output);        
    }
    
    @Override
    public void setValue(String value){     
        VarValue.setText(value);       
    }
  
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JLabel();
        out_panel = new javax.swing.JPanel();
        VarValue = new javax.swing.JLabel();
        VarType = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(200, 60));
        setPreferredSize(new java.awt.Dimension(200, 60));
        setLayout(new java.awt.BorderLayout());

        Header.setBackground(new java.awt.Color(255, 255, 255));
        Header.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        Header.setForeground(new java.awt.Color(0, 0, 0));
        Header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Header.setText(getHeader());
        Header.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));
        Header.setFocusable(false);
        Header.setInheritsPopupMenu(false);
        Header.setOpaque(true);
        Header.setRequestFocusEnabled(false);
        Header.setVerifyInputWhenFocusTarget(false);
        add(Header, java.awt.BorderLayout.SOUTH);

        out_panel.setBackground(new java.awt.Color(255, 255, 255));
        out_panel.setForeground(new java.awt.Color(255, 255, 255));
        out_panel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        VarValue.setBackground(new java.awt.Color(255, 255, 255));
        VarValue.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        VarValue.setForeground(new java.awt.Color(0, 0, 0));
        VarValue.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VarValue.setText(org.openide.util.NbBundle.getMessage(DisplayDefault.class, "DisplayDefault.VarValue.text")); // NOI18N
        VarValue.setFocusable(false);
        VarValue.setInheritsPopupMenu(false);
        VarValue.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        VarValue.setMinimumSize(new java.awt.Dimension(0, 0));
        VarValue.setOpaque(true);
        out_panel.add(VarValue);

        VarType.setBackground(new java.awt.Color(255, 255, 255));
        VarType.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        VarType.setForeground(new java.awt.Color(0, 0, 0));
        VarType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        VarType.setText(getUnit());
        VarType.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        VarType.setMinimumSize(new java.awt.Dimension(0, 0));
        VarType.setOpaque(true);
        VarType.setPreferredSize(null);
        out_panel.add(VarType);

        add(out_panel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Header;
    private javax.swing.JLabel VarType;
    private javax.swing.JLabel VarValue;
    private javax.swing.JPanel out_panel;
    // End of variables declaration//GEN-END:variables

    public String getHeader() {
        return header;
    }

    public void setHeader(String header) {
        this.header = header;
        Header.setText(header);
    }

    public String getFormat() {
        return format;
    }

    public void setFormat(String format) {
        this.format = format;
    }

    public String getUnit() {
        return unit;
    }

    public void setUnit(String unit) {
        this.unit = unit;
        VarType.setText(unit);
    }

    
}
