/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DisplayDefault.java
 *
 * Created on Dec 13, 2011, 10:44:39 PM
 */
package com.opus;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FontMetrics;



/**
 *
 * @author antrax
 */
public class DisplayDigital extends javax.swing.JPanel implements MDisplay{

    String header;
    //Font display_font;
    String format;
    
    private double value;
    
    Color led_on = new Color(152,255,92);
    Color led_off = new Color(0,80,0);
    Color led_red = new Color(255,0,0);
    Color led_blue = new Color(52,52,255);
    
    /** Creates new form DisplayDefault */
    public DisplayDigital() {
        
        initComponents();
    }

    
    public DisplayDigital(String header, String mask) {
        
        this.header=header;
        this.format=mask;
        initComponents();
        
    }
    
    
    
    @Override
    public void commitDisplay(){
        
        FontMetrics metrics;
        Dimension v_size, u_size, pn_size;
        int adv, hgt;
        
        // Calcule a dimens√£o do Header
        metrics = Header.getFontMetrics(Header.getFont());
        adv = metrics.stringWidth(header+" ")+2;
        hgt = metrics.getHeight()+2;
        v_size = new Dimension(adv, hgt);
        Header.setPreferredSize(v_size);
        
        // Ajuste o header
        v_size = new Dimension(v_size.width, 24);
        out_panel.setPreferredSize(v_size);
        
        pn_size = new Dimension(v_size.width, v_size.height + 24);
        this.setPreferredSize(pn_size);
        
        setValue(0);
        
    }
    
 
    @Override
    public void setValue( double value){     
        
        if (!format.equals("##0.0")){
            if (value==0){ 
                value++;
            }
            else if (value == 1){
                value=0;
            }
        }
        
        this.value = value;
        if (value == 0){
            out_panel.setBackground(led_off);
        }
        else{
            out_panel.setBackground(led_on);
        }
    }
    
    
    @Override
    public void setValue(String value){     
        if (value.equals("on")){
            out_panel.setBackground(led_on);
        }
        else if (value.equals("red")){
            out_panel.setBackground(led_red);
        }
        else if (value.equals("blue")){
            out_panel.setBackground(led_blue);
        }
        else{
            out_panel.setBackground(Color.BLACK);
        }
    }
   
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JLabel();
        out_panel = new javax.swing.JPanel();

        setMaximumSize(new java.awt.Dimension(200, 60));
        setPreferredSize(new java.awt.Dimension(200, 60));
        setLayout(new java.awt.BorderLayout());

        Header.setBackground(new java.awt.Color(0, 0, 0));
        Header.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        Header.setForeground(new java.awt.Color(152, 255, 52));
        Header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Header.setText(getHeader());
        Header.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 3, 1, 3));
        Header.setFocusable(false);
        Header.setInheritsPopupMenu(false);
        Header.setOpaque(true);
        Header.setRequestFocusEnabled(false);
        Header.setVerifyInputWhenFocusTarget(false);
        add(Header, java.awt.BorderLayout.SOUTH);

        out_panel.setBackground(new java.awt.Color(0, 80, 0));
        out_panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        out_panel.setForeground(new java.awt.Color(0, 0, 0));
        out_panel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));
        add(out_panel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Header;
    private javax.swing.JPanel out_panel;
    // End of variables declaration//GEN-END:variables

    public String getHeader() {
        return header;
    }

    @Override
    public void setHeader(String header) {
        this.header = header;
        Header.setText(header);
    }

    public String getFormat() {
        return "";
    }

    @Override
    public void setFormat(String format) {
        this.format = format;
    }

    @Override
    public void setUnit(String unit) {
       
    }

    /**
     * @return the value
     */
    public double getValue() {
        return value;
    }

}
